syntax = "proto2";
// Amazon -> UPS
message ACommand {
    optional bool disconnect=1;
    optional bool finished=2;
    repeated newShipment newShipmentCreated=3;
    repeated loadedPackage packageLoaded=4;
    repeated checkUsername checkUsers=5;
    repeated int64 acks=6;
    repeated Err error=7;
}

// UPS -> Amazon
message UCommand {
    optional bool disconnect=1;
    optional bool finished=2;
    // shipID and trackingNumbers should be one-to-one in the same order
    repeated newShipmentResponse trackingNumberCreated=3;
    repeated truckArrival arrived=4;
    repeated deliveredPackage delivered=5;
    repeated changeDeliveryAddress changeAddress=6;
    repeated checkUsernameResponse checkUser=7;
    repeated int64 acks=8;
    repeated Err error=9;
}

// error message
message Err{
    required string err = 1;
    required int64 originseqnum = 2;
    required int64 seqnum = 3;
}

message createWorld {
    required int64 worldID=1;
    required int64 seqnum=2;
}

// response
message createWorldResponse {
    //error status? 0:success 1:failure
    required int32 status=1;
}


message checkUsername {
    required string upsUsername=1;
    required int64 seqnum=2;
}

message checkUsernameResponse {
    required string upsUsername=1;
    //-1: username does not exist
    required int64 upsUserID=2;
    required int64 seqnum=3;
}

message newShipment {
    required int64 shipID = 1;
    required product productInfo=2;
    required warehouse warehouseInfo=3;
    required destination destinationInfo=4;
    optional string upsUsername = 5;
    required int64 seqnum=6;
}

message newShipmentResponse {
    required int64 shipID = 1;
    required int64 trackingNumber = 2;
    //error status? 0:success 1:failure
    required int32 status=3;
    required int64 seqnum=4;
}

message product{
    required int64 productID=1;
    required string description=2;
    required int32 count = 3;
}

message destination {
    required int32 x=1;
    required int32 y=2;
}

message warehouse{
    required int32 warehouseID = 1;
    required int32 x = 2;
    required int32 y = 3;
}

message truckArrival {
    required warehouse warehouseInfo=1;
    required int32 truckID=2;
    repeated int64 shipID = 3;
    required int64 seqnum=4;
}

message truckArrivalResponse {
    //error status? 0:success 1:failure
    required int32 status = 1;
    required int64 seqnum = 2;
}
// request
message loadedPackage {
    repeated int64 trackingNumber=1;
    required int32 truckID=2;
    required int64 seqnum=3;
}

// response
message loadedPackagesResponse {
    repeated int32 confirmLoadedStatus=1;
//error status? 0:success 1:failure
    required int32 status=2;
    required int64 seqnum=3;
}

// request
message deliveredPackage {
    required int64 trackingNumber=1;
    required int64 seqnum=2;
}

message deliveredPackageResponse {
//error status? 0:success 1:failure
    required int32 status=1;
    required int64 seqnum=2;
}

// request
message changeDeliveryAddress {
    required int64 trackingNumber=1;
    required destination destinationInfo=2;
    required int64 seqnum=3;
}

message changeDeliveryAddressResponse {
//error status? 0:success 1:failure
    required int32 status=1;
    required int64 seqnum=2;
}
